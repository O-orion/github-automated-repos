{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": { "jsx": true },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "import-helpers",
    "prettier"
  ],
  "rules": {
    // --- Geral ---
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-shadow": "off",
    "no-void": ["error", { "allowAsStatement": true }],
    "@typescript-eslint/no-use-before-define": "error",
    "curly": ["error", "all"],

    // --- Arrow functions (único padrão) ---
    "func-style": ["error", "expression", { "allowArrowFunctions": true }],
    "prefer-arrow-callback": "error",
    "arrow-body-style": ["error", "as-needed"],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "FunctionDeclaration",
        "message": "Use arrow functions only. Function declarations are not allowed."
      }
    ],

    // --- React ---
    "react/function-component-definition": [
      "error",
      { "namedComponents": "arrow-function", "unnamedComponents": "arrow-function" }
    ],
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",

    // --- Naming Convention (default: camelCase) ---
    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": "default", "format": ["camelCase"] },
      { "selector": "variable", "format": ["camelCase"] },
      { "selector": "function", "format": ["camelCase"] },
      { "selector": "typeLike", "format": ["PascalCase"] },
      { "selector": "interface", "format": ["PascalCase"], "custom": { "regex": "^I[A-Z]", "match": true } },
      { "selector": "enumMember", "format": ["PascalCase"] },
      {
        "selector": "variable",
        "modifiers": ["const", "global"],
        "types": ["boolean", "string", "number", "array"],
        "format": ["UPPER_CASE"]
      },
      { "selector": "property", "format": ["camelCase", "snake_case"], "leadingUnderscore": "forbid" },
      { "selector": "property", "modifiers": ["requiresQuotes"], "format": null },
      { "selector": "parameter", "format": ["camelCase"] }
    ],

    // --- Imports ---
    "import/extensions": ["error", "ignorePackages", { "ts": "never", "tsx": "never" }],
    "import-helpers/order-imports": [
      "error",
      {
        "newlinesBetween": "always",
        "groups": [["/^react/"], ["module"], ["/^@\\//"], ["parent", "sibling", "index"]],
        "alphabetize": { "order": "asc", "ignoreCase": true }
      }
    ],
    "import/no-default-export": "error",
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.{ts,tsx}",
          "**/*.spec.{ts,tsx}",
          "src/setupTests.{ts,tsx}",
          "src/**/*.stories.{ts,tsx}",
          "src/**/*.test.{ts,tsx}",
          "src/**/*.spec.{ts,tsx}",
          "**/vite.config.{ts,js}",
          "**/webpack.config.{ts,js}",
          "**/jest.config.{ts,js}",
          "src/**/*.tsx",
          "src/**/*.ts"
        ],
        "optionalDependencies": false,
        "peerDependencies": true
      }
    ],

    // --- Prettier ---
    "prettier/prettier": "error",

    // --- Promises ---
    "@typescript-eslint/no-floating-promises": ["error", { "ignoreVoid": true }]
  },
  "overrides": [
    {
      "files": ["src/components/**/*.{ts,tsx}"],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          { "selector": "function", "modifiers": ["exported"], "format": ["PascalCase"] },
          { "selector": "variable", "modifiers": ["const", "exported"], "format": ["PascalCase"] }
        ]
      }
    }
  ],
  "settings": {
    "import/resolver": { "typescript": {} },
    "react": { "version": "detect" }
  }
}
